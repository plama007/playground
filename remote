@RestController
public class HealthController {
    private static final Logger LOGGER = LoggerFactory.getLogger(HealthController.class);

    @Autowired
    private HealthEndpoint healthEndpoint;

    @GetMapping("/health")
    public String healthStatus() {
        try {
            HealthComponent health = healthEndpoint.health();
            String healthJson = new ObjectMapper().writeValueAsString(health);
            LOGGER.info("WMAWS Service health: {}", healthJson);
            return healthJson;
        } catch (JsonProcessingException e) {
            LOGGER.error("Exception encountered while getting application health", e);
        }
        return null;
    }
}

@RestController
public class HealthController {
    private static final Logger LOGGER = LoggerFactory.getLogger(HealthController.class);

    @Autowired
    private ServiceCloudClient serviceCloudClient;

    @GetMapping("/health-status")
    public ResponseEntity<Object> healthStatus() {
        Object resp;
        try {
            resp = serviceCloudClient.execute(URLConstants.HEALTH, HttpMethod.GET, null, null, "", null);
            return ResponseEntity.ok(resp);
        } catch (Exception e) {
            LOGGER.error(WMAWSConstants.RESPONSE_ERROR, e);
        }
        return ResponseEntity.ok(WMAWSConstants.RESPONSE_ERROR);
    }
}

@Component
public class HealthChecker {
    private static final Logger LOGGER = LoggerFactory.getLogger(HealthChecker.class);

    @Autowired
    private HealthEndpoint healthEndpoint;

    @Scheduled(fixedRate = 60000)
    public void logHealth() throws JsonProcessingException {
        HealthComponent health = healthEndpoint.health();
        String healthJson = new ObjectMapper().writeValueAsString(health);
        LOGGER.info("Application health: {}", healthJson);
    }
}
