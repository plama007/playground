import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.web.client.RestTemplateBuilder;
import org.springframework.context.annotation.Bean;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

@SpringBootApplication
public class Application {

    public static void main(String[] args) {
        SpringApplication.run(Application.class, args);
    }
}

@RestController
class HealthController {

    private final RestTemplate restTemplate;

    private static final String HEALTH_ENDPOINT = "http://localhost:8080/actuator/health";

    public HealthController(RestTemplateBuilder restTemplateBuilder) {
        this.restTemplate = restTemplateBuilder.build();
    }

    @GetMapping("/health-status")
    public String healthStatus() {
        return restTemplate.getForObject(HEALTH_ENDPOINT, String.class);
    }
}

@Configuration
class HealthCheckerConfiguration {

    private static final String HEALTH_ENDPOINT = "http://localhost:8080/actuator/health";

    @Bean
    public RestTemplate restTemplate(RestTemplateBuilder builder) {
        return builder.build();
    }

    @Bean
    public ScheduledExecutorService executorService() {
        ScheduledExecutorService executor = Executors.newSingleThreadScheduledExecutor();

        RestTemplate restTemplate = new RestTemplateBuilder().build();

        Runnable task = () -> {
            String health = restTemplate.getForObject(HEALTH_ENDPOINT, String.class);
            System.out.println("Application health: " + health);
        };

        executor.scheduleAtFixedRate(task, 0, 10, TimeUnit.SECONDS);
        return executor;
    }
}
